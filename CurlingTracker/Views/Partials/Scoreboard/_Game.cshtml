@using CurlingTracker.Utility
@* Model = Game *@
<div data-game-id='@Model.GameId' class='game-container' onclick="showGame('@Model.GameId', '@ViewData["EventId"]', window.location.pathname + '?@Model.GetQueryString()')">
    <div class='scores-teams-container'>
        <div class='scores-team-container'>
            <div class='scores-team-name'>
                @Model.Team1ShortName 
            </div>
            <div data-score1 class='scores-score'>
                <span class='scores-hammer' data-hammer1>@Html.Raw(Model.Team1Hammer ? "<img src='/images/hammer.png'/>" : "")</span>
                @Model.Team1Score
            </div>
        </div>
        <div class='scores-team-container'>
            <div class='scores-team-name'>
                @Model.Team2ShortName 
            </div>
            <div data-score2 class='scores-score'>
                <span class='scores-hammer' data-hammer2>@Html.Raw(Model.Team2Hammer ? "<img src='/images/hammer.png'/>" : "")</span>
                @Model.Team2Score
            </div>
        </div>
    </div>
    <div data-end class='scores-end-container @(Model.IsFinal ? " scores-final " : "")'>
        @(DateTime.Now < Model.Date.ToLocalTime() ? (Model.Date.Date == DateTime.Today ? Model.Date.ToLocalTime().ToString("h:mm tt")  : Model.Date.ToLocalTime().ToString("MMM d, h:mm tt") ) : (Model.IsFinal ? "Final (" + (Model.CurrentEnd - 1) + ")" : StringUtil.AddOrdinal(Model.CurrentEnd) + " end"))
    </div>						
</div>