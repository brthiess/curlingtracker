@using CurlingTracker.Utility
@*Model = Draw *@
@*ViewData["EventId"] *@
@foreach(Game game in Model.Games)
{
    <div data-game-id='@game.GameId' class='game-container' onclick="showGame('@game.GameId', '@ViewData["EventId"]')">
    <div class='scores-teams-container'>
        <div class='scores-team-container'>
            <div class='scores-team-name'>
                @game.Team1ShortName 
                <span data-hammer1>@Html.Raw(game.Team1Hammer ? "<img src='/images/hammer.png'/>" : "")</span>
            </div>
            <div data-score1 class='scores-score'>@game.Team1Score</div>
        </div>
        <div class='scores-team-container'>
            <div class='scores-team-name'>
                @game.Team2ShortName 
                <span data-hammer2>@Html.Raw(game.Team2Hammer ? "<img src='/images/hammer.png'/>" : "")</span>
            </div>
            <div data-score2 class='scores-score'>@game.Team2Score</div>
        </div>
    </div>
    <div data-end class='scores-end-container @(game.IsFinal ? " scores-final " : "")'>
        @(DateTime.Now < Model.Date ? Model.Date.ToString() : (game.IsFinal ? "Final (" + game.CurrentEnd + ")" : StringUtil.AddOrdinal(game.CurrentEnd) + " end"))
    </div>						
</div>
}